version: '3'
services:

  # ==========================================================================
  # Django Main Image - image making first
  # ==========================================================================

  daa-django: &daa-django
    build:
      context: .
      dockerfile: ../django_all_about/Dockerfile
    image: daa-django
    hostname: daa-django
    container_name: daa-django
    volumes:
      - ../django_all_about:/app:z
      - ../django_all_about/scripts:/scripts
      - ../promtail:/promtail/
      - ../promtail/log:/var/log
    env_file:
      - ./env
    ports:
      - "8000:8000"
    command: /scripts/start-django.sh
    networks:
      - django-all-about-app

  # ==========================================================================
  # Application (as S/W, as L7) WebServer - Nignx
  # ==========================================================================

  daa-nginx:
    image: nginx
    hostname: daa-nginx
    container_name: daa-nginx
    volumes:
      - ../nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d:/etc/nginx/conf.d
      - ../django_all_about/static:/etc/nginx/static
      - ../django_all_about/media:/etc/nginx/media
      - ../nginx/logs:/var/log/nginx
    ports:
      - "80:80"
    environment:
      - NGINX_PORT=80
    networks:
      - django-all-about-app

  # ==========================================================================
  # Sub Database nosql - mongodb
  # ==========================================================================

  daa-mongodb:
    image: mongo
    hostname: daa-mongodb
    container_name: daa-mongodb
    ports:
      - "29019:29019"
    volumes:
      - ../mongodb/data:/data/db
      - ../mongodb/cnf:/etc/mongo
      - ../mongodb/logs:/var/log/mongodb
    entrypoint: ["mongod", "-f", "/etc/mongo/mongod.conf"]
    environment:
      TZ: Asia/Seoul
    networks:
      - django-all-about-app

  # ==========================================================================
  # Databases - postgresql
  # ==========================================================================

  # main - select only
  daa-postgres:
    image: postgres:latest
    hostname: daa-postgres
    container_name: daa-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "nuung"
      POSTGRES_PASSWORD: daa123!
      POSTGRES_DB: daa-postgres-db
    volumes:
      - ../postgresql/data/:/var/lib/postgresql/data
    networks:
      - django-all-about-app

  # sub - insert & update & delete only
  daa-postgres-sub:
    image: postgres:latest
    hostname: daa-postgres-sub
    container_name: daa-postgres-sub
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "nuung"
      POSTGRES_PASSWORD: daa123!
      POSTGRES_DB: daa-postgres-db
    volumes:
      - ../postgresql-sub/data/:/var/lib/postgresql/data
    networks:
      - django-all-about-app

  # backup - backup only
  daa-postgres-backup:
    image: postgres:latest
    hostname: daa-postgres-backup
    container_name: daa-postgres-backup
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: "nuung"
      POSTGRES_PASSWORD: daa123!
      POSTGRES_DB: daa-postgres-db
    volumes:
      - ../postgresql-backup/data/:/var/lib/postgresql/data
    networks:
      - django-all-about-app

  # ==========================================================================
  # Main in-memory DB by cache and message queue
  # ==========================================================================

  daa-redis:
    image: redis:alpine
    hostname: daa-redis
    container_name: daa-redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
    volumes:
      - ../redis/data:/data
      - ../redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server --port 6379
    networks:
      - django-all-about-app

  # ==========================================================================
  # Celery, async worker - celery & celery beat celery monitor flower
  # ==========================================================================

  dda-celeryworker:
    <<: *daa-django
    container_name: dda-celeryworker
    depends_on:
      - daa-redis
      - daa-postgres
    env_file:
      - ./env
    ports: []
    command: /scripts/start-celeryworker.sh
    networks:
      - django-all-about-app

  dda-celerybeat:
    <<: *daa-django
    container_name: dda-celerybeat
    depends_on:
      - daa-redis
      - daa-postgres
    env_file:
      - ./env
    ports: []
    command: /scripts/start-celerybeat.sh
    networks:
      - django-all-about-app

  # ==========================================================================
  # DevOps Monitoring Flower & Grafana & Prometheus
  # ==========================================================================

  dda-flower:
    <<: *daa-django
    hostname: dda-flower
    container_name: dda-flower
    ports:
      - "5555:5555"
    depends_on:
      - dda-celeryworker
    command: /scripts/start-flower.sh
    networks:
      - django-all-about-app

  dda-prometheus:
    image: prom/prometheus
    hostname: dda-prometheus
    container_name: dda-prometheus
    ports:
      - "9090:9090"
    restart: always
    volumes:
      - ../prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - django-all-about-app

  daa-grafana:
    image: grafana/grafana
    hostname: daa-grafana
    container_name: daa-grafana
    ports:
      - "3003:3003"
    restart: always
    volumes:
      - ../grafana:/var/lib/grafana/
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_SERVER_HTTP_PORT=3003
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - dda-prometheus
    networks:
      - django-all-about-app

  # ==========================================================================
  # DevOps Logging Grafana Loki & Grafana Promtail
  # ==========================================================================

  daa-loki:
    image: grafana/loki:2.6.1
    hostname: daa-loki
    container_name: daa-loki
    ports:
      - "3100:3100"
    volumes:
      - ../loki/:/loki/
    command: -config.file=/loki/config/local-config.yaml
    networks:
      - django-all-about-app

  # promtail은 "agent"로써 수집할 server에 있어야함
  # base image build할 때 포함시키기
  # daa-promtail:
  #   image: grafana/promtail:2.6.1
  #   hostname: daa-promtail
  #   container_name: daa-promtail
  #   volumes:
  #     - ../promtail:/promtail/
  #     - ../promtail/log:/var/log
  #     - ../promtail/config/config.yml:/promtail/config.yml
  #   command: -config.file=/promtail/config.yml
  #   networks:
  #     - django-all-about-app

networks:
  django-all-about-app:
    driver: bridge
